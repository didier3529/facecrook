"use strict";(self.webpackChunkfacecrook=self.webpackChunkfacecrook||[]).push([[242],{242:(e,t,s)=>{s.r(t),s.d(t,{default:()=>n});var r=s(555);const n=class{constructor(){this.storageKey="facecrook_trump_conversations",this.maxConversationHistory=50,this.maxStorageUsers=20}getConversation(e){try{const t=this.getAllConversations(),s=t[e];return s?(s.metadata.lastAccessed=(new Date).toISOString(),this.saveConversations((0,r.A)((0,r.A)({},t),{},{[e]:s})),s):{messages:[],metadata:{created:(new Date).toISOString(),lastInteraction:(new Date).toISOString(),totalMessages:0,partyInvitesSent:0,userResponses:0}}}catch(t){return console.error("Error loading conversation:",t),{messages:[],metadata:{}}}}saveMessage(e,t){try{const s=this.getAllConversations(),n=s[e]||{messages:[],metadata:{created:(new Date).toISOString(),lastInteraction:(new Date).toISOString(),totalMessages:0,partyInvitesSent:0,userResponses:0}};n.messages.push((0,r.A)((0,r.A)({},t),{},{storedAt:(new Date).toISOString()})),n.metadata.lastInteraction=(new Date).toISOString(),n.metadata.totalMessages+=1,"user"===t.sender?n.metadata.userResponses+=1:"party_invite"===t.messageType&&(n.metadata.partyInvitesSent+=1),n.messages.length>this.maxConversationHistory&&(n.messages=n.messages.slice(-this.maxConversationHistory));const a=(0,r.A)((0,r.A)({},s),{},{[e]:n});return this.saveConversations(a),!0}catch(s){return console.error("Error saving message:",s),!1}}getAllConversations(){try{const e=localStorage.getItem(this.storageKey);if(!e)return{};const t=JSON.parse(e),s=Object.keys(t);if(s.length>this.maxStorageUsers){const e=s.sort((e,s)=>{const r=new Date(t[e].metadata.lastInteraction||0);return new Date(t[s].metadata.lastInteraction||0)-r}).slice(0,this.maxStorageUsers),r={};return e.forEach(e=>{r[e]=t[e]}),this.saveConversations(r),r}return t}catch(e){return console.error("Error loading conversations:",e),{}}}saveConversations(e){try{return localStorage.setItem(this.storageKey,JSON.stringify(e)),!0}catch(t){if(console.error("Error saving conversations to storage:",t),"QuotaExceededError"===t.name){this.cleanupOldData();try{return localStorage.setItem(this.storageKey,JSON.stringify(e)),!0}catch(s){return console.error("Error saving after cleanup:",s),!1}}return!1}}cleanupOldData(){try{const e=this.getAllConversations(),t=Object.keys(e),s=new Date;s.setDate(s.getDate()-30);const n={};t.forEach(t=>{const a=e[t];new Date(a.metadata.lastInteraction)>s&&(n[t]=(0,r.A)((0,r.A)({},a),{},{messages:a.messages.slice(-20)}))}),this.saveConversations(n),console.log("Cleaned up old conversation data")}catch(e){console.error("Error during cleanup:",e)}}getConversationStats(e){const t=this.getConversation(e),s=t.messages||[],r=s.filter(e=>"user"===e.sender),n=s.filter(e=>"trump"===e.sender),a=s.filter(e=>"party_invite"===e.messageType);return{totalMessages:s.length,userMessages:r.length,trumpMessages:n.length,partyInvites:a.length,conversationStarted:t.metadata.created,lastInteraction:t.metadata.lastInteraction,avgResponseTime:this.calculateAverageResponseTime(s),topTopics:this.getTopTopics(s)}}calculateAverageResponseTime(e){if(!this.storageKey)return 0;const t=[];for(let r=1;r<e.length;r+=1){const s=e[r-1],n=e[r];if("user"===s.sender&&"trump"===n.sender){const e=new Date(s.timestamp),r=new Date(n.timestamp)-e;r>0&&r<3e5&&t.push(r)}}if(0===t.length)return 0;const s=t.reduce((e,t)=>e+t,0)/t.length;return Math.round(s/1e3)}getTopTopics(e){if(!this.storageKey)return[];const t={party:0,business:0,crypto:0,deals:0,success:0,people:0};return e.forEach(e=>{const s=e.content.toLowerCase();(s.includes("party")||s.includes("event")||s.includes("tonight"))&&(t.party+=1),(s.includes("business")||s.includes("deal")||s.includes("money"))&&(t.business+=1),(s.includes("crypto")||s.includes("bitcoin")||s.includes("coin"))&&(t.crypto+=1),(s.includes("deal")||s.includes("negotiate")||s.includes("contract"))&&(t.deals+=1),(s.includes("success")||s.includes("win")||s.includes("great"))&&(t.success+=1),(s.includes("people")||s.includes("friend")||s.includes("everyone"))&&(t.people+=1)}),Object.entries(t).sort((e,t)=>{let[,s]=e,[,r]=t;return r-s}).slice(0,3).map(e=>{let[t,s]=e;return{topic:t,count:s}})}clearConversation(e){try{const t=this.getAllConversations();return delete t[e],this.saveConversations(t),!0}catch(t){return console.error("Error clearing conversation:",t),!1}}clearAllConversations(){try{return localStorage.removeItem(this.storageKey),!0}catch(e){return console.error("Error clearing all conversations:",e),!1}}exportConversationData(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;try{const t=this.getAllConversations();return e?{user:e,conversation:t[e]||null,exported:(new Date).toISOString()}:{allConversations:t,totalUsers:Object.keys(t).length,exported:(new Date).toISOString()}}catch(t){return console.error("Error exporting conversation data:",t),null}}importConversationData(e){try{if(e.allConversations)return this.saveConversations(e.allConversations),!0;if(e.user&&e.conversation){const t=this.getAllConversations();return t[e.user]=e.conversation,this.saveConversations(t),!0}return!1}catch(t){return console.error("Error importing conversation data:",t),!1}}}}}]);
//# sourceMappingURL=242.283ee16d.chunk.js.map