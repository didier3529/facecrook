
/**
 * Simulates AI response generation for satirical content
 * This is a mock implementation for the FaceCrook satirical platform
 */

const AI_RESPONSE_DELAY = 1000; // Simulate AI thinking time

const SATIRICAL_RESPONSES = [
    "üöÄ This post is going to the moon! (Just kidding, it's staying on Earth)",
    "ü§ñ AI analysis: 97% chance this is peak comedy",
    "üíé Diamond hands detected... or are those just sweaty palms?",
    "üìà Chart says this trend is definitely going... somewhere",
    "üé≠ The satire levels are off the charts!",
    "üåï Moon mission status: Still in the garage",
    "üí∞ Investment advice: Maybe stick to your day job",
    "üé™ Welcome to the crypto circus! Popcorn not included"
];

const CRYPTO_BUZZWORDS = [
    'blockchain revolution',
    'decentralized disruption',
    'NFT transformation',
    'DeFi innovation',
    'Web3 paradigm',
    'tokenized future',
    'digital assets',
    'smart contracts'
];

/**
 * Generates crypto-specific satirical responses
 * @param {string} prompt - Original prompt
 * @returns {string} Crypto-themed satirical response
 */
function generateCryptoSatire(prompt) {
    const cryptoSatire = [
        `üé≠ Oh look, another "${prompt.substring(0, 20)}..." revolutionary idea! Have you considered revolutionary nap time instead?`,
        "üìä My algorithms suggest this has a 420.69% chance of being the next big thing... in comedy!",
        "üé™ Step right up to the crypto carnival! Where everyone's a financial advisor and nobody knows what they're talking about!",
        "ü§π Juggling buzzwords like a pro! Now try juggling actual financial responsibility.",
        "üé≤ Rolling the dice on the future of finance? Hope you brought snacks for the waiting room."
    ];

    return cryptoSatire[Math.floor(Math.random() * cryptoSatire.length)];
}

/**
 * Generates satirical response based on input prompt
 * @param {string} prompt - Input text to respond to
 * @returns {string} Satirical response
 */
function generateSatiricalResponse(prompt) {
    const lowerPrompt = prompt.toLowerCase();

    // Check for crypto-related keywords
    const hasCryptoKeywords = CRYPTO_BUZZWORDS.some(keyword =>
        lowerPrompt.includes(keyword.toLowerCase())
    );

    if (hasCryptoKeywords) {
        return generateCryptoSatire(prompt);
    }

    // Check for emotional indicators
    if (lowerPrompt.includes('moon') || lowerPrompt.includes('rocket')) {
        return "üöÄ Someone's been watching too many YouTube crypto gurus! Remember, gravity still exists.";
    }

    if (lowerPrompt.includes('diamond hands') || lowerPrompt.includes('hodl')) {
        return "üíé Ah yes, the ancient art of losing money with style! Your commitment is... admirable.";
    }

    if (lowerPrompt.includes('ape') || lowerPrompt.includes('yolo')) {
        return "ü¶ç Careful there, even apes do their research before swinging to the next tree!";
    }

    // Default satirical responses
    return SATIRICAL_RESPONSES[Math.floor(Math.random() * SATIRICAL_RESPONSES.length)];
}

/**
 * Generates a satirical response for the most recent user message
 * @param {Array<{role:string, content:string}>} conversation - Message history
 * @returns {Promise<string>} Satirical reply
 */
export async function fetchAiResponse(conversation) {
    const lastUser = [...conversation].reverse().find(msg => msg.role === 'user');
    const prompt = lastUser ? lastUser.content : '';
    await new Promise((resolve) => {
        setTimeout(resolve, AI_RESPONSE_DELAY);
    });
    return generateSatiricalResponse(prompt);
}

/**
 * Generates basic file templates for missing files
 * @param {string} filename - Name of the missing file
 * @returns {string} Basic template content
 */
function generateFileTemplate(filename) {
    if (filename.includes('.jsx') || filename.includes('.js')) {
        return `// TODO: Implement ${filename}
// This file was auto-generated by AI (which is having an existential crisis about crypto)

export default function ${filename.replace(/\.[^/.]+$/, "")}() {
  return (
    <div>
      <h2>üöß Under Construction</h2>
      <p>This component is still being built... just like the crypto future!</p>
    </div>
  );
}`;
    }

    return `# ${filename}\n\nThis file is missing, just like clear crypto regulations!\n\nTODO: Implement actual content`;
}

/**
 * Generates crypto-specific satirical responses
 * @param {string} prompt - Original prompt
 * @returns {string} Crypto-themed satirical response
 */
/**
 * Simulates AI response for missing file detection
 * @param {Array} missingFiles - List of missing files
 * @returns {Promise<Object>} AI suggestions for missing files
 */
export const fetchMissingFilesSuggestions = async (missingFiles) => {
    await new Promise(resolve => {
        setTimeout(resolve, 500);
    });

    const suggestions = missingFiles.map(file => ({
        filename: file,
        suggestion: `ü§ñ AI suggests: Maybe "${file}" went to the same place as your portfolio gains?`,
        priority: Math.random() > 0.5 ? 'high' : 'medium',
        templateSuggestion: generateFileTemplate(file)
    }));

    return {
        suggestions,
        totalMissing: missingFiles.length,
        aiConfidence: 0.95,
        timestamp: new Date().toISOString()
    };
};

export default fetchAiResponse;
